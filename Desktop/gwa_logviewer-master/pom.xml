<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.13</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>de.swm.gwa</groupId>
	<artifactId>logviewer</artifactId>
	<version>0.0.11-SNAPSHOT</version>
	<name>logviewer</name>
	<description>View logs of HES via browser</description>

	<!-- Verteilung SWM -->

	<distributionManagement>
		<repository>
			<id>SWMReleases</id>
			<name>SWM Releases</name>
			<url>https://artifactory.intra.swm.de/artifactory/swm-release-repo/
			</url>
		</repository>
		<snapshotRepository>
			<id>SWMSnapshots</id>
			<name>SWM Snapshots</name>
			<url>https://artifactory.intra.swm.de/artifactory/swm-snapshot-repo/
			</url>
		</snapshotRepository>
	</distributionManagement>

	<properties>
		<java.version>8</java.version>
		<nodejs.version>10.19.0</nodejs.version>
		<npm.version>6.13.1</npm.version>
        <spring.version>5.2.6.RELEASE</spring.version>
		<aciidoctor.sourceDirectory>src/docs/asciidoc
		</aciidoctor.sourceDirectory>
		<asciidoctor.outputDir>${project.build.directory}
		</asciidoctor.outputDir>
		<artifactory.url>https://artifactory.intra.swm.de/artifactory</artifactory.url>
		<node.sass-binary-site>${artifactory.url}/thirdparty-binaries/github.com/sass/node-sass/releases/tag
		</node.sass-binary-site>
		<node.sass-binary-site>${artifactory.url}/nodejs-releases/
		</node.sass-binary-site>
		<node.registry>${artifactory.url}/nodejs-releases/</node.registry>
		<npm.registry>${artifactory.url}/api/npm/npmjs-registry</npm.registry>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-websocket</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-messaging</artifactId>
        </dependency>
		<dependency>
			<groupId>net.sf.jpathwatch</groupId>
			<artifactId>jpathwatch</artifactId>
			<version>0.95</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-text -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-text</artifactId>
			<version>1.10.0</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.11.0</version>
		</dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>jstl</artifactId>
        </dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.asciidoctor</groupId>
				<artifactId>asciidoctor-maven-plugin</artifactId>
				<version>1.5.6</version>
				<dependencies>
					<dependency>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctorj-pdf</artifactId>
						<version>1.5.0-alpha.16</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>asciidoctor-pdf</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>process-asciidoc</goal>
						</goals>
						<configuration>
							<backend>pdf</backend>
							<outputDirectory>${asciidoctor.outputDir}</outputDirectory>
							<attributes>
								<pdf-stylesdir>theme</pdf-stylesdir>
								<pdf-style>custom</pdf-style>
							</attributes>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<sourceDirectory>${aciidoctor.sourceDirectory}</sourceDirectory>
					<sourceHighlighter>coderay</sourceHighlighter>

					<attributes>
						<endpoint-url>http://channelmgr:667</endpoint-url>
						<toc>left</toc>
						<icons>font</icons>
						<project-release-date>${maven.build.timestamp}
						</project-release-date>
						<project-version>${project.version}</project-version>
					</attributes>
				</configuration>
			</plugin>
			<!-- filter systemd script -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target/rpm</outputDirectory>
							<resources>
								<resource>
									<directory>src/rpm</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<executable>true</executable>
				</configuration>
			</plugin>
			<plugin>
				<groupId>de.dentrassi.maven</groupId>
				<artifactId>rpm</artifactId>
				<version>1.1.0</version>
				<executions>
					<execution>
						<goals>
							<goal>rpm</goal>
						</goals>
						<configuration>
							<attach>true</attach> <!-- S. Rittsteiger: attach RPM for release -->
							<group>Application/Misc</group> <!-- set RPM group -->

							<skipSigning>true</skipSigning>

							<requires>
								<require>java-1_8_0-openjdk-headless</require>
							</requires>

							<rulesets>
								<ruleset>
									<id>my-default</id>
									<rules>
										<rule>
											<when>
												<type>directory</type>
											</when>
											<mode>0750</mode>
										</rule>
										<rule>
											<when>
												<prefix>/etc/</prefix>
											</when>
											<configuration>true</configuration>
										</rule>
										<file>
											<when>
												<prefix>/usr/share/doc/</prefix>
											</when>
											<documentation>true</documentation>
										</file>
										<file>
											<when>
												<suffix>README.txt</suffix>
											</when>
											<readme>true</readme>
										</file>
									</rules>
								</ruleset>
							</rulesets>

							<entries>
								<entry>
									<name>/opt/logviewer/logviewer.jar</name>
									<file>target/logviewer-${project.version}.jar</file>
									<mode>0750</mode>
									<ruleset>my-default</ruleset>
								</entry>
								<entry>
									<name>/etc/logviewer/application.yml</name>
									<file>src/main/resources/application-prod.yml</file>
									<ruleset>my-default</ruleset>
								</entry>
								<entry>
									<name>/usr/lib/systemd/system/logviewer.service</name>
									<file>target/rpm/logviewer.service</file>
									<ruleset>my-default</ruleset>
								</entry>
							</entries>

							<beforeInstallation>
								<file>src/rpm/preinstall.sh</file>
							</beforeInstallation>
							<afterInstallation>
								<file>src/rpm/postinstall.sh</file>
							</afterInstallation>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.coderplus.maven.plugins</groupId>
				<artifactId>copy-rename-maven-plugin</artifactId>
				<version>1.0</version>
				<executions>
					<execution>
						<id>rename-file</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>rename</goal>
						</goals>
						<configuration>
							<sourceFile>${basedir}/target/documentation.pdf</sourceFile>
							<destinationFile>${basedir}/target/${project.artifactId}-${project.version}.pdf
							</destinationFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.9.1</version>
				<configuration>
					<nodeVersion>v${nodejs.version}</nodeVersion>
					<npmInheritsProxyConfigFromMaven>false</npmInheritsProxyConfigFromMaven>
				</configuration>
				<executions>
					<execution>
						<id>install node and npm</id>
						<phase>validate</phase>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<configuration>
							<nodeVersion>v${nodejs.version}</nodeVersion>
							<!-- <downloadRoot>${node.registry}</downloadRoot> -->
						</configuration>
					</execution>
					<execution>
						<id>npm install</id>
						<goals>
							<goal>npm</goal>
						</goals>

						<configuration>
						<!--
							<arguments>install - -strict-ssl=false - -no-optional - -registry=${npm.registry}
								- -sass-binary-site=${node.sass-binary-site}
							</arguments>
						-->
							<arguments>install --strict-ssl=false --no-optional
								--sass-binary-site=${node.sass-binary-site}
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>gulp build</id>
						<goals>
							<goal>gulp</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
